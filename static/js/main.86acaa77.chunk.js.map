{"version":3,"sources":["index.js"],"names":["createStore","require","todoInput","document","getElementById","todoSubmit","ul","querySelector","ADD_TODO","DELETE_TODO","todoStore","state","action","type","newToDoObj","text","id","Date","now","filter","stateObj","parseInt","handleDeleteToDo","event","dispatch","target","parentNode","subscribe","toDoArray","getState","innerHTML","forEach","toDo","li","createElement","button","addEventListener","appendChild","preventDefault","todoInputValue","value"],"mappings":"qIAAQA,EAAgBC,EAAQ,GAAxBD,YAEFE,EAAYC,SAASC,eAAe,aACpCC,EAAaF,SAASC,eAAe,cACrCE,EAAKH,SAASI,cAAc,MAE5BC,EAAW,WACXC,EAAc,cAqBdC,EAAYV,GAlBG,WAAuB,IAAtBW,EAAqB,uDAAf,GAAIC,EAAW,uCAIzC,OAAQA,EAAOC,MACb,KAAKL,EACH,IAAMM,EAAa,CAACC,KAAMH,EAAOG,KAAMC,GAAIC,KAAKC,OAChD,MAAM,CAAEJ,GAAR,mBAAuBH,IACzB,KAAKF,EACH,OAAOE,EAAMQ,QAAO,SAACC,GACnB,OAAOA,EAASJ,KAAOK,SAAST,EAAOI,OAE3C,QACE,OAAOL,MAOPW,EAAmB,SAACC,GAExBb,EAAUc,SAAS,CAACX,KAAMJ,EAAaO,GAAIO,EAAME,OAAOC,WAAWV,MAkCrEN,EAAUiB,WA9Bc,WACtB,IAAMC,EAAUlB,EAAUmB,WAE1BvB,EAAGwB,UAAU,GAEbF,EAAUG,SAAQ,SAACC,GAGjB,IAAMC,EAAK9B,SAAS+B,cAAc,MAC5BC,EAAShC,SAAS+B,cAAc,UAEtCD,EAAGjB,GAAGgB,EAAKhB,GACXiB,EAAGH,UAAH,sDAA4DE,EAAKjB,MAEjEoB,EAAOL,UAAU,SACjBK,EAAOC,iBAAiB,QAAQd,GAEhCW,EAAGI,YAAYF,GACf7B,EAAG+B,YAAYJ,SAcnB5B,EAAW+B,iBAAiB,SATJ,SAACb,GACvBA,EAAMe,iBACN,IAAMC,EAAiBrC,EAAUsC,MACjCtC,EAAUsC,MAAM,GAChB9B,EAAUc,SAAS,CAACX,KAAML,EAAUO,KAAMwB,S","file":"static/js/main.86acaa77.chunk.js","sourcesContent":["const { createStore } = require(\"redux\");\r\n\r\nconst todoInput = document.getElementById('todoInput');\r\nconst todoSubmit = document.getElementById('todoSubmit');\r\nconst ul = document.querySelector('ul');\r\n\r\nconst ADD_TODO = \"ADD_TODO\";\r\nconst DELETE_TODO = \"DELETE_TODO\";\r\n\r\n\r\nconst todoModifier = (state=[], action) => {\r\n  // console.log(state);\r\n  // console.log(action);\r\n\r\n  switch (action.type){\r\n    case ADD_TODO:\r\n      const newToDoObj = {text: action.text, id: Date.now()}\r\n      return [newToDoObj, ...state];\r\n    case DELETE_TODO:\r\n      return state.filter((stateObj)=>{\r\n        return stateObj.id !== parseInt(action.id);\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n  \r\n}\r\n\r\nconst todoStore = createStore(todoModifier);\r\n\r\nconst handleDeleteToDo = (event) => {\r\n  // console.log(event.target.parentNode.id);\r\n  todoStore.dispatch({type: DELETE_TODO, id: event.target.parentNode.id});\r\n  // console.log(todoStore.getState());\r\n}\r\n\r\nconst handlePaintToDo = () => {\r\n  const toDoArray=todoStore.getState();\r\n  // console.log(toDoArray);\r\n  ul.innerHTML=\"\";\r\n  \r\n  toDoArray.forEach((toDo)=>{\r\n    // console.log(toDo);\r\n\r\n    const li = document.createElement('li');\r\n    const button = document.createElement('button');\r\n\r\n    li.id=toDo.id;\r\n    li.innerHTML=`<i class=\"fas fa-chevron-circle-right\"></i> ${toDo.text}`;\r\n\r\n    button.innerHTML=\"❌\";\r\n    button.addEventListener('click',handleDeleteToDo);\r\n\r\n    li.appendChild(button);\r\n    ul.appendChild(li);\r\n  })\r\n\r\n}\r\n\r\nconst handleToDoInput = (event)=>{\r\n  event.preventDefault();\r\n  const todoInputValue = todoInput.value;\r\n  todoInput.value=\"\";\r\n  todoStore.dispatch({type: ADD_TODO, text: todoInputValue})\r\n}\r\n\r\ntodoStore.subscribe(handlePaintToDo);\r\n\r\ntodoSubmit.addEventListener('click',handleToDoInput);"],"sourceRoot":""}